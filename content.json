{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/09/27/hello-world/"},{"title":"GitHub Pagesでのデプロイ完了","text":"GitHubでのデプロイ完了これでGitHub Pagesでのデプロイは完了したと思う。 次のステージへここまで長かったが、これでようやく次の段階へ進められる。","link":"/2021/09/27/GitHub-Pages%E3%81%A7%E3%81%AE%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E5%AE%8C%E4%BA%86/"},{"title":"清書テスト","text":"見出し 1記事を書く練習をしましょう。 見出し 2markdown記法は、他のwebページで学習してみましょう。 見出し 3次は、ローカルサーバでこのページを確認してみます。 見出し 4これでGitHub Pagesでのデプロイは完了したと思う。","link":"/2021/09/27/%E6%B8%85%E6%9B%B8%E3%83%86%E3%82%B9%E3%83%88/"},{"title":"静的サイトジェネレータのHexoでブログを作る方法(Mac編)①","text":"Node.jsとnvmとnpmをインストールしよう ツール 役割 Node.js サーバーサイドで動くJavascriptの実行環境の1つ。 nvm Node.jsのバージョンを切り替えて使うことを可能にするツール。 npm Node.jsのパッケージ管理ツール。 ※nvmはnode version managerの略です。※npmはnode package managerの略で、パッケージというのはアプリの様なものです。 インストールする順番は、 nvm Node.js npm です。 1. nvmからインストールしようターミナルを開いて、下記のコマンドを入力します。 1$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash nvmのアップデート方法 $ nvm --version現在のnvmのバージョンを確認します。 $ cd $HOME/.nvmまたは$ cd ~/.nvmnvmのパスに移動します。環境によってはインストールパス~/.nvmが違う事がありますが、ホームディレクトリにnvmが存在する事が多いみたいです。 $ git pull origin mastergitを使って、最新のバージョンをマージします。※マージとは、Gitにおいて分岐した履歴を戻して統合する手段です。 $ source ~/.nvm/nvm.shnvmを起動し直します。 $ nvm --versionアップデートしたnvmのバージョンを確認します。最新になっていれば、更新は以上で完了です。 続いて、ターミナルを立ち上げた直後に、いつでもnvmが使える状態に設定します。Finder &gt; 移動 &gt; フォルダーへ移動で~/.bash_profileと入力しましょう。 見つからない場合には.bash_profileというファイルを新規作成します。 僕のつまずきポイント→.bash_profileは隠れているしかし、その前に、.bash_profileは隠しファイルと呼ばれ、本来隠れているものなので、一時的に編集する場合、「Finder」で隠しファイルを表示させる必要があるので、まず隠しファイル・フォルダを表示する方法を紹介します。 一旦、$ exitでターミナルを終了させてから、再度ターミナルを立ち上げて、隠しファイル・フォルダを表示するように以下のdefaultsコマンドを実行します。 1$ defaults write com.apple.finder AppleShowAllFiles TRUE 設定を反映するために「Finder」プロセスを終了します。 $ killall Finder これで設定完了です。確認してみましょう。 薄っすらと隠しファイル・フォルダが表示されれば、OKです。 それでも.bash_profileファイルが見つからない場合には.bash_profileというファイルを新規作成します。 $ touch ~/.bash_profile .bash_profileというファイルが見つかった場合には、そのファイルをVScode等のテキストエディターで開いて、次のように編集します。コピペでいいです。 1234# 以下を追記します。こちらはターミナル起動時にnvmが使えるようになる設定です。# source ~/.nvm/nvm.shexport NVM_DIR=&quot;$HOME/.nvm&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot; 編集したら保存します。保存が完了したら$ exitで終了させ、再度ターミナルを起動します。再起動したら、次回からはターミナル起動直後にnvmも起動するようになります。 nvmが使えるか、試しに次のようなnvmコマンドを入力してみましょう。 12$ nvm versionv4.3.0 nvm versionコマンドは、インストールされているnvmのバージョンを表示させるコマンドです。バージョンナンバーが表示されればnvmのインストールは完了です。 2. nvmでNode.jsをインストールしよう次にnvmでNode.jsをインストールしましょう。この記事を執筆時点での最新版(推奨版)であるv14.8.1にしたいと思います。 下記のサイトから、現在の最新版(推奨版)のバージョンを確認できます。 ダウンロード | Node.js Node.jsをインストールするにはnvm installコマンドを使います。 1$ nvm install v14.8.1 今度はv6.10.0を入れてみたいと思います。 1$ nvm install v6.10.0 これで複数のNode.jsをインストールすることができました。実際に2種類のNode.jsがインストールされているか確認してみましょう。nvmでインストールしたNode.jsを確認するにはnvm lsコマンドを使います。 123$ nvm lsv14.8.1v6.10.0 先ほど、インストールしたv14.8.1とv6.10.0がリストに表示されればOKです。インストールしたNode.jsをアンインストール(削除)したい時にはnvm uninstallコマンドを使います。 1$ nvm uninstall v6.10.0 以上のように、nvmでは複数のNode.jsをインストールや削除したり、またどれを使用するのか決める事ができるプログラムとなっています。 好きなバージョンのNode.jsを使える前にも書きましたが、nvmは任意のバージョンのNode.jsを自由に切り替えて使うことができます。試しに、nvmでv14.8.1を使う設定に切り替えてみましょう。切り替えるにはnvm useコマンドを使います。 12$ nvm use v14.8.1Now using node v14.8.1 これで最新のNode.jsを使う設定になりました。 ターミナルを開いた際に指定のバージョンのNode.jsを使うnvmの注意点としては、ターミナルを終了してしまうと、それまでの操作が初期化されてしまいます。そこで、ターミナルを立ち上げた直後にnvm useが自動で実行される状態になるように、設定を作っておきましょう。Finder &gt; 移動 &gt; フォルダーへ移動で.bash_profileと入力します。 .bash_profileというファイルが見つかりますので、これを VScode等のテキストエディターで次のように編集します。 12# nvm use をターミナル起動時に実行するnvm use &quot;v14.8.1&quot; 先程の、.bash_profileの編集の下に、上記をコピペで保存でOKです。 なので、.bash_profileファイルの中身は下記の様になっていると思います。 1234567# 以下を追記します。こちらはターミナル起動時にnvmが使えるようになる設定です。# source ~/.nvm/nvm.shexport NVM_DIR=&quot;$HOME/.nvm&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;# nvm use をターミナル起動時に実行するnvm use &quot;v14.8.1&quot; これで、ターミナル起動直後からNode.jsのv14.8.1が使用できる状態になりました。 隠しファイル・フォルダを非表示ちなみに、隠しファイル・フォルダを非表示（デフォルトの設定）に戻す場合は、ターミナルに以下のコマンドを実行します。 12$ defaults write com.apple.finder AppleShowAllFiles FALSE$ killall Finder 3. npmは既にインストールされているダウンロード | Node.js 上記のサイトを確認して、nvmを使って最新のNode.jsをインストールした際に、(同梱npm6.14.15)と書いてあったのに気が付きましたか？ 最新版や新しいバージョンのNode.jsにはnpmも一緒にインストールされます。 僕のつまずきポイント→古いバージョンのNode.jsにはnpmが同梱されていない僕ははじめ、上記のサイトを知らなかったので、古いバージョンのNode.jsをインストールしてしまい、npmが同梱されておらず、npmが無いぞと探し回り、新しいバージョンのNode.jsをインストールすることで解決しました。 また、念のため最新バージョンにアップデートしておきましょう。 1$ npm update -g npm アップデートするには、上記のようにnpm updateコマンドを使います。 終わりに これでHexoでのブログ構築に必要なNode.jsの環境が整いました次回はHexoのインストールからになります。 おつかれさまでした。 参考サイト node.jsとnpmとnvmをインストールしよう。node.jsの環境を用意する（Mac OSX… .bash_profileと.bashrcのまとめ - Qiita Mac - Finderで隠しファイル・フォルダを表示する方法 - PC設定のカルマ ダウンロード | Node.js","link":"/2021/09/27/%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BF%E3%81%AEHexo%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E4%BD%9C%E3%82%8B%E6%96%B9%E6%B3%95(Mac%E7%B7%A8)%E2%91%A0/"}],"tags":[],"categories":[]}